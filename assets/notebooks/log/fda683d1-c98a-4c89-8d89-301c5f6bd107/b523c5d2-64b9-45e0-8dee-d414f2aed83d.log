
Cell 5:

Cell 7:
Collecting imbalanced-learn==0.7.0

  Downloading imbalanced_learn-0.7.0-py3-none-any.whl (167 kB)
[?25l     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/167.1 kB[0m [31m?[0m eta [36m-:--:--[0m[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m167.1/167.1 kB[0m [31m18.2 MB/s[0m eta [36m0:00:00[0m
[?25hRequirement already satisfied: numpy>=1.13.3 in /opt/conda/envs/Python-3.10-Premium/lib/python3.10/site-packages (from imbalanced-learn==0.7.0) (1.23.1)
Requirement already satisfied: scipy>=0.19.1 in /opt/conda/envs/Python-3.10-Premium/lib/python3.10/site-packages (from imbalanced-learn==0.7.0) (1.8.1)
Requirement already satisfied: scikit-learn>=0.23 in /opt/conda/envs/Python-3.10-Premium/lib/python3.10/site-packages (from imbalanced-learn==0.7.0) (1.1.1)
Requirement already satisfied: joblib>=0.11 in /opt/conda/envs/Python-3.10-Premium/lib/python3.10/site-packages (from imbalanced-learn==0.7.0) (1.1.1)
Requirement already satisfied: threadpoolctl>=2.0.0 in /opt/conda/envs/Python-3.10-Premium/lib/python3.10/site-packages (from scikit-learn>=0.23->imbalanced-learn==0.7.0) (2.2.0)

Installing collected packages: imbalanced-learn

Successfully installed imbalanced-learn-0.7.0

Cell 9:

Cell 11:

Cell 13:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [6], in <cell line: 1>()
----> 1 my_file = project.get_file('Bill Payment View.csv')
      2 my_file.seek(0)
      3 df_prep = pd.read_csv(my_file)

NameError: name 'project' is not defined

Cell 15:

Cell 17:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [8], in <cell line: 2>()
      1 # sort by billing date for each customer
----> 2 df_prep = df_prep.sort_values([customer_id_col, billing_date_col])
      3 # shift the overdue balance back 1 record per customer to create our target variable
      4 # we want to know on the billing date whether the customer misses the payment
      5 df_prep[target_col] = df_prep.groupby(customer_id_col)[overdue_balance_col].shift(-1)

NameError: name 'df_prep' is not defined

Cell 19:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [9], in <cell line: 3>()
      1 # start by having a look at the target variable
      2 # plot the distribution of the target for each product
----> 3 df_temp = df_prep[target_col].value_counts().reset_index()
      4 df_temp['perc'] = df_temp[target_col] / df_temp[target_col].sum()
      6 target_0 = df_temp[df_temp['index']==0]['perc'].values[0]

NameError: name 'df_prep' is not defined

Cell 21:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [10], in <cell line: 1>()
----> 1 df_prep['BILLING_MONTH'] = df_prep[billing_date_col].astype(str).str[0:6]
      2 df_temp = df_prep.copy()
      3 df_temp = df_temp.dropna(axis=0, subset=[target_col])

NameError: name 'df_prep' is not defined

Cell 23:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [11], in <cell line: 1>()
      1 for col in l_cols_to_summarise:
----> 2     df_prep = cur_month_vs_historical_summary(df_prep, col, customer_id_col, lookback_window)
      3     # add the columns that will be created to the list
      4     l_numerical_features.append('RATIO_THIS_MONTH_' + col + '_VS_LAST_MONTH')  

NameError: name 'df_prep' is not defined

Cell 25:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [12], in <cell line: 2>()
      1 # how many times has a customer missed a payment in the lookback period?
----> 2 df_prep['NUM_MISSED_PAYMENTS_LOOKBACK_WINDOW'] = df_prep.groupby(customer_id_col)[target_col].shift(1).rolling(lookback_window).sum()
      4 l_numerical_features.append('NUM_MISSED_PAYMENTS_LOOKBACK_WINDOW')

NameError: name 'df_prep' is not defined

Cell 27:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [13], in <cell line: 1>()
----> 1 df_prep['BILLING_MONTH_NUMBER'] = df_prep[billing_date_col].astype(str).str[4:6]
      2 l_categorical_for_dummy_vars.append('BILLING_MONTH_NUMBER')

NameError: name 'df_prep' is not defined

Cell 28:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [14], in <cell line: 1>()
----> 1 df_prep.head()

NameError: name 'df_prep' is not defined

Cell 30:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [15], in <cell line: 1>()
----> 1 X = df_prep.dropna(axis=0, subset=[target_col]).drop([target_col], axis=1)
      2 y = df_prep.dropna(axis=0, subset=[target_col])[target_col]
      4 X_train, X_val_test, y_train, y_val_test = train_test_split(X, y, stratify=y, test_size=0.40, random_state=123)

NameError: name 'df_prep' is not defined

Cell 31:

Cell 32:

Cell 33:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [18], in <cell line: 1>()
----> 1 fitted_preprocessor = preprocessor.fit(X_train)
      3 X_train_postprocess = fitted_preprocessor.transform(X_train)
      4 X_validation_postprocess = preprocessor.transform(X_validation)

NameError: name 'X_train' is not defined

Cell 34:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [19], in <cell line: 1>()
----> 1 onehot_columns=list(fitted_preprocessor.named_transformers_['cat'].named_steps['dummy_vars'].get_feature_names(input_features=l_categorical_for_dummy_vars))
      2 numeric_features_list = list(l_numerical_features)
      3 numeric_features_list.extend(onehot_columns)

NameError: name 'fitted_preprocessor' is not defined

Cell 35:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [20], in <cell line: 5>()
      1 # Save out the transformer
      2 # mimetype is guessed when promoting the asset into the deployment space
      3 # we need to save the file as a type recognised by the mimetype library
      4 # this doesn't impact the object type
----> 5 joblib.dump(fitted_preprocessor, 'preprocessor_transformer.txt')

NameError: name 'fitted_preprocessor' is not defined

Cell 37:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [21], in <cell line: 4>()
      1 print("Before Applying SMOTE to Training Data: ")
      3 # record the target density before balancing
----> 4 pre_balancing_target_density = y_train.mean()
      6 df_temp = pd.DataFrame(pd.Series(y_train).value_counts().reset_index())
      7 df_temp.columns=['Target', 'Num Cases']

NameError: name 'y_train' is not defined
Before Applying SMOTE to Training Data: 


Cell 38:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [22], in <cell line: 3>()
      1 sm = SMOTE(random_state=0)
----> 3 X_train_postprocess, y_train = sm.fit_sample(X_train_postprocess, y_train)
      5 # record the target density after balancing
      6 post_balancing_target_density = y_train.mean()

NameError: name 'X_train_postprocess' is not defined

Cell 39:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [23], in <cell line: 3>()
      1 print("After Applying SMOTE to Training Data: ")
----> 3 df_temp = pd.DataFrame(pd.Series(y_train).value_counts().reset_index())
      4 df_temp.columns=['Target', 'Num Cases']
      5 df_temp.sort_values('Target')

NameError: name 'y_train' is not defined
After Applying SMOTE to Training Data: 


Cell 41:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [24], in <cell line: 10>()
     12 for mf in l_mf:
     13     clf = RandomForestClassifier(n_estimators=ne, max_depth=md, max_features=mf, random_state=0)
---> 14     clf.fit(X_train_postprocess, y_train)
     16     y_pred_train = clf.predict_proba(X_train_postprocess)[:,1]
     17     y_pred_validation = clf.predict_proba(X_validation_postprocess)[:,1]

NameError: name 'X_train_postprocess' is not defined

Cell 43:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [25], in <cell line: 3>()
      1 clf = RandomForestClassifier(n_estimators=top_ne, max_depth=top_md, max_features=top_mf, random_state=0)
----> 3 clf.fit(X_train_postprocess, y_train)
      5 y_pred_train = clf.predict_proba(X_train_postprocess)[:,1]
      6 y_pred_validation = clf.predict_proba(X_validation_postprocess)[:,1]

NameError: name 'X_train_postprocess' is not defined

Cell 45:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [26], in <cell line: 2>()
      1 # make adjustment to probabilities
----> 2 y_pred_validation = 1/(1+(1/pre_balancing_target_density-1)/(1/post_balancing_target_density-1)*(1/y_pred_validation-1))
      3 y_pred_test = 1/(1+(1/pre_balancing_target_density-1)/(1/post_balancing_target_density-1)*(1/y_pred_test-1))

NameError: name 'pre_balancing_target_density' is not defined

Cell 46:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [27], in <cell line: 2>()
      1 # recreate the data for ROC Curve and confirm that the AUC is the same
----> 2 fpr_validation, tpr_validation, thresholds_validation = metrics.roc_curve(y_validation, y_pred_validation)
      3 fpr_test, tpr_test, thresholds_test = metrics.roc_curve(y_test, y_pred_test)
      5 auc_validation = metrics.auc(fpr_validation, tpr_validation)

NameError: name 'y_validation' is not defined

Cell 48:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [28], in <cell line: 4>()
      1 fig = plt.figure(figsize=(10,5))
      2 plt.plot([0, 1], [0, 1], label='random')
----> 4 plt.plot(fpr_validation, tpr_validation, label= 'Validation AUC=' + str(np.round(auc_validation, 2)) + ')')
      5 plt.plot(fpr_test, tpr_test, label= 'Test AUC=' + str(np.round(auc_test, 2)) + ')')
      7 plt.xlabel('False positive rate')

NameError: name 'fpr_validation' is not defined


Cell 50:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [29], in <cell line: 2>()
      1 # get the optimal threshold based on Youden's index
----> 2 idx_opt_thres = np.argmax(tpr_validation - fpr_validation)
      3 opt_threshold = thresholds_validation[idx_opt_thres]
      4 print(opt_threshold)

NameError: name 'tpr_validation' is not defined

Cell 51:

Cell 53:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [31], in <cell line: 1>()
----> 1 confusion_matrix_validation = metrics.confusion_matrix(y_validation, y_pred_class_validation, labels=[0,1])
      2 confusion_matrix_test = metrics.confusion_matrix(y_test, y_pred_class_test, labels=[0,1])
      4 fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(24, 5))

NameError: name 'y_validation' is not defined

Cell 55:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [32], in <cell line: 1>()
----> 1 df_probs = pd.DataFrame({'predicted_probability' : y_pred_validation, 'predicted_class' : y_pred_class_validation})
      2 df_probs['binned_prob'] = np.ceil(df_probs['predicted_probability'] * 20) / 20
      4 df_probs = df_probs.groupby(['binned_prob', 'predicted_class']).count().reset_index()

NameError: name 'y_pred_validation' is not defined

Cell 58:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [33], in <cell line: 1>()
----> 1 plot_feature_importance(feature_list=numeric_features_list, 
      2                         feature_importances=clf.feature_importances_, 
      3                         title="Payment Risk Prediction RandomForest: Top 10 Features")

NameError: name 'numeric_features_list' is not defined

Cell 60:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [34], in <cell line: 1>()
----> 1 X_total_postprocess = fitted_preprocessor.transform(df_prep.drop([target_col], axis=1))
      2 y_pred_total = clf.predict_proba(X_total_postprocess)[:,1]
      3 # make the same adjustment as we previously carried out

NameError: name 'fitted_preprocessor' is not defined

Cell 63:

Cell 64:
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
Input In [36], in <cell line: 4>()
      1 from ibm_watson_machine_learning import APIClient
      2 import os
----> 4 location = os.environ['RUNTIME_ENV_REGION'] 
      5 wml_credentials = {
      6     "apikey": ibmcloud_api_key,
      7     "url": 'https://' + location + '.ml.cloud.ibm.com'
      8 }
      9 client = APIClient(wml_credentials)

File /opt/conda/envs/Python-3.10-Premium/lib/python3.10/os.py:679, in _Environ.__getitem__(self, key)
    676     value = self._data[self.encodekey(key)]
    677 except KeyError:
    678     # raise KeyError with the original key value
--> 679     raise KeyError(key) from None
    680 return self.decodevalue(value)

KeyError: 'RUNTIME_ENV_REGION'

Cell 66:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [37], in <cell line: 2>()
      1 space_uid=""
----> 2 for space in client.spaces.get_details()['resources']:
      4     if space['entity']['name'] ==space_name:
      5         print("Deployment space with ",space_name," exists . .")

NameError: name 'client' is not defined

Cell 68:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [38], in <cell line: 1>()
----> 1 sw_spec_uid = client.software_specifications.get_uid_by_name("default_py3.8")
      3 metadata = {
      4     client.repository.ModelMetaNames.NAME: model_name,
      5     client.repository.ModelMetaNames.INPUT_DATA_SCHEMA:[{'id': '1', 'type': 'struct', 'fields': [{"name":column_name,"type":str(column_type[0])} for column_name,column_type in pd.DataFrame(X_train.dtypes).T.to_dict('list').items()]}],
      6     client.repository.ModelMetaNames.TYPE: "scikit-learn_0.23",
      7     client.repository.ModelMetaNames.SOFTWARE_SPEC_UID: sw_spec_uid 
      8 }
     10 stored_model_details = client.repository.store_model(model=clf, meta_props=metadata)

NameError: name 'client' is not defined

Cell 70:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [39], in <cell line: 1>()
----> 1 metadata_dict = {'user_inputs' : user_inputs_dict, 'probability_threshold' : opt_threshold, 'training_data_pre_balancing_target_density' : pre_balancing_target_density,
      2                     'training_data_post_balancing_target_density' : post_balancing_target_density}

NameError: name 'opt_threshold' is not defined

Cell 71:
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [40], in <cell line: 3>()
      1 # create meta-props for the model
      2 meta_props = {
----> 3     client.deployments.ConfigurationMetaNames.NAME: deployment_name,
      4     client.deployments.ConfigurationMetaNames.TAGS : ['utilities_payment_risk_prediction_model_deployment_tag'],
      5     client.deployments.ConfigurationMetaNames.SERVING_NAME: model_name.replace('_','')[:30]+''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(6)),
      6     client.deployments.ConfigurationMetaNames.CUSTOM: metadata_dict
      7 }
      9 # deploy the model
     11 model_uid = stored_model_details["metadata"]["id"]

NameError: name 'client' is not defined
